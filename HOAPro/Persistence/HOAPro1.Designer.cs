//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HOAPro", "DueInvoices_DueYears", "DueYear", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAPro.Persistence.DueYear), "DueInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAPro.Persistence.DueInvoice), true)]
[assembly: EdmRelationshipAttribute("HOAPro", "DueInvoices_Homes", "Home", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAPro.Persistence.Home), "DueInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAPro.Persistence.DueInvoice), true)]
[assembly: EdmRelationshipAttribute("HOAPro", "DueInvoice_DuePayments", "DueInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HOAPro.Persistence.DueInvoice), "DuePayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HOAPro.Persistence.DuePayment), true)]

#endregion

namespace HOAPro.Persistence
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HOAProDBContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HOAProDBContainer object using the connection string found in the 'HOAProDBContainer' section of the application configuration file.
        /// </summary>
        public HOAProDBContainer() : base("name=HOAProDBContainer", "HOAProDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HOAProDBContainer object.
        /// </summary>
        public HOAProDBContainer(string connectionString) : base(connectionString, "HOAProDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HOAProDBContainer object.
        /// </summary>
        public HOAProDBContainer(EntityConnection connection) : base(connection, "HOAProDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Home> Homes
        {
            get
            {
                if ((_Homes == null))
                {
                    _Homes = base.CreateObjectSet<Home>("Homes");
                }
                return _Homes;
            }
        }
        private ObjectSet<Home> _Homes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DueInvoice> DueInvoices
        {
            get
            {
                if ((_DueInvoices == null))
                {
                    _DueInvoices = base.CreateObjectSet<DueInvoice>("DueInvoices");
                }
                return _DueInvoices;
            }
        }
        private ObjectSet<DueInvoice> _DueInvoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DueYear> DueYears
        {
            get
            {
                if ((_DueYears == null))
                {
                    _DueYears = base.CreateObjectSet<DueYear>("DueYears");
                }
                return _DueYears;
            }
        }
        private ObjectSet<DueYear> _DueYears;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DuePayment> DuePayments
        {
            get
            {
                if ((_DuePayments == null))
                {
                    _DuePayments = base.CreateObjectSet<DuePayment>("DuePayments");
                }
                return _DuePayments;
            }
        }
        private ObjectSet<DuePayment> _DuePayments;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Homes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHomes(Home home)
        {
            base.AddObject("Homes", home);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DueInvoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDueInvoices(DueInvoice dueInvoice)
        {
            base.AddObject("DueInvoices", dueInvoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DueYears EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDueYears(DueYear dueYear)
        {
            base.AddObject("DueYears", dueYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DuePayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDuePayments(DuePayment duePayment)
        {
            base.AddObject("DuePayments", duePayment);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOAPro", Name="DueInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DueInvoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DueInvoice object.
        /// </summary>
        /// <param name="homeId">Initial value of the HomeId property.</param>
        /// <param name="dueAmount">Initial value of the DueAmount property.</param>
        /// <param name="dueInvoicesId">Initial value of the DueInvoicesId property.</param>
        /// <param name="dueYearsId">Initial value of the DueYearsId property.</param>
        public static DueInvoice CreateDueInvoice(global::System.Int32 homeId, global::System.Decimal dueAmount, global::System.Guid dueInvoicesId, global::System.Guid dueYearsId)
        {
            DueInvoice dueInvoice = new DueInvoice();
            dueInvoice.HomeId = homeId;
            dueInvoice.DueAmount = dueAmount;
            dueInvoice.DueInvoicesId = dueInvoicesId;
            dueInvoice.DueYearsId = dueYearsId;
            return dueInvoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HomeId
        {
            get
            {
                return _HomeId;
            }
            set
            {
                OnHomeIdChanging(value);
                ReportPropertyChanging("HomeId");
                _HomeId = StructuralObject.SetValidValue(value, "HomeId");
                ReportPropertyChanged("HomeId");
                OnHomeIdChanged();
            }
        }
        private global::System.Int32 _HomeId;
        partial void OnHomeIdChanging(global::System.Int32 value);
        partial void OnHomeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DueAmount
        {
            get
            {
                return _DueAmount;
            }
            set
            {
                OnDueAmountChanging(value);
                ReportPropertyChanging("DueAmount");
                _DueAmount = StructuralObject.SetValidValue(value, "DueAmount");
                ReportPropertyChanged("DueAmount");
                OnDueAmountChanged();
            }
        }
        private global::System.Decimal _DueAmount;
        partial void OnDueAmountChanging(global::System.Decimal value);
        partial void OnDueAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DueInvoicesId
        {
            get
            {
                return _DueInvoicesId;
            }
            set
            {
                if (_DueInvoicesId != value)
                {
                    OnDueInvoicesIdChanging(value);
                    ReportPropertyChanging("DueInvoicesId");
                    _DueInvoicesId = StructuralObject.SetValidValue(value, "DueInvoicesId");
                    ReportPropertyChanged("DueInvoicesId");
                    OnDueInvoicesIdChanged();
                }
            }
        }
        private global::System.Guid _DueInvoicesId;
        partial void OnDueInvoicesIdChanging(global::System.Guid value);
        partial void OnDueInvoicesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DueYearsId
        {
            get
            {
                return _DueYearsId;
            }
            set
            {
                OnDueYearsIdChanging(value);
                ReportPropertyChanging("DueYearsId");
                _DueYearsId = StructuralObject.SetValidValue(value, "DueYearsId");
                ReportPropertyChanged("DueYearsId");
                OnDueYearsIdChanged();
            }
        }
        private global::System.Guid _DueYearsId;
        partial void OnDueYearsIdChanging(global::System.Guid value);
        partial void OnDueYearsIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOAPro", "DueInvoices_DueYears", "DueYear")]
        public DueYear DueYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DueYear>("HOAPro.DueInvoices_DueYears", "DueYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DueYear>("HOAPro.DueInvoices_DueYears", "DueYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DueYear> DueYearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DueYear>("HOAPro.DueInvoices_DueYears", "DueYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DueYear>("HOAPro.DueInvoices_DueYears", "DueYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOAPro", "DueInvoices_Homes", "Home")]
        public Home Home
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("HOAPro.DueInvoices_Homes", "Home").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("HOAPro.DueInvoices_Homes", "Home").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Home> HomeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Home>("HOAPro.DueInvoices_Homes", "Home");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Home>("HOAPro.DueInvoices_Homes", "Home", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOAPro", "DueInvoice_DuePayments", "DuePayment")]
        public EntityCollection<DuePayment> DuePayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DuePayment>("HOAPro.DueInvoice_DuePayments", "DuePayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DuePayment>("HOAPro.DueInvoice_DuePayments", "DuePayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOAPro", Name="DuePayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DuePayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DuePayment object.
        /// </summary>
        /// <param name="dueInvoicesId">Initial value of the DueInvoicesId property.</param>
        /// <param name="duePaymentsId">Initial value of the DuePaymentsId property.</param>
        public static DuePayment CreateDuePayment(global::System.Guid dueInvoicesId, global::System.Guid duePaymentsId)
        {
            DuePayment duePayment = new DuePayment();
            duePayment.DueInvoicesId = dueInvoicesId;
            duePayment.DuePaymentsId = duePaymentsId;
            return duePayment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value, "PaymentAmount");
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CheckImageUNC
        {
            get
            {
                return _CheckImageUNC;
            }
            set
            {
                OnCheckImageUNCChanging(value);
                ReportPropertyChanging("CheckImageUNC");
                _CheckImageUNC = StructuralObject.SetValidValue(value, true, "CheckImageUNC");
                ReportPropertyChanged("CheckImageUNC");
                OnCheckImageUNCChanged();
            }
        }
        private global::System.String _CheckImageUNC;
        partial void OnCheckImageUNCChanging(global::System.String value);
        partial void OnCheckImageUNCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DueInvoicesId
        {
            get
            {
                return _DueInvoicesId;
            }
            set
            {
                OnDueInvoicesIdChanging(value);
                ReportPropertyChanging("DueInvoicesId");
                _DueInvoicesId = StructuralObject.SetValidValue(value, "DueInvoicesId");
                ReportPropertyChanged("DueInvoicesId");
                OnDueInvoicesIdChanged();
            }
        }
        private global::System.Guid _DueInvoicesId;
        partial void OnDueInvoicesIdChanging(global::System.Guid value);
        partial void OnDueInvoicesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DuePaymentsId
        {
            get
            {
                return _DuePaymentsId;
            }
            set
            {
                if (_DuePaymentsId != value)
                {
                    OnDuePaymentsIdChanging(value);
                    ReportPropertyChanging("DuePaymentsId");
                    _DuePaymentsId = StructuralObject.SetValidValue(value, "DuePaymentsId");
                    ReportPropertyChanged("DuePaymentsId");
                    OnDuePaymentsIdChanged();
                }
            }
        }
        private global::System.Guid _DuePaymentsId;
        partial void OnDuePaymentsIdChanging(global::System.Guid value);
        partial void OnDuePaymentsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CashPayment
        {
            get
            {
                return _CashPayment;
            }
            set
            {
                OnCashPaymentChanging(value);
                ReportPropertyChanging("CashPayment");
                _CashPayment = StructuralObject.SetValidValue(value, "CashPayment");
                ReportPropertyChanged("CashPayment");
                OnCashPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _CashPayment;
        partial void OnCashPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnCashPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ForfeitDueToForeclosure
        {
            get
            {
                return _ForfeitDueToForeclosure;
            }
            set
            {
                OnForfeitDueToForeclosureChanging(value);
                ReportPropertyChanging("ForfeitDueToForeclosure");
                _ForfeitDueToForeclosure = StructuralObject.SetValidValue(value, "ForfeitDueToForeclosure");
                ReportPropertyChanged("ForfeitDueToForeclosure");
                OnForfeitDueToForeclosureChanged();
            }
        }
        private Nullable<global::System.Boolean> _ForfeitDueToForeclosure;
        partial void OnForfeitDueToForeclosureChanging(Nullable<global::System.Boolean> value);
        partial void OnForfeitDueToForeclosureChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOAPro", "DueInvoice_DuePayments", "DueInvoice")]
        public DueInvoice DueInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DueInvoice>("HOAPro.DueInvoice_DuePayments", "DueInvoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DueInvoice>("HOAPro.DueInvoice_DuePayments", "DueInvoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DueInvoice> DueInvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DueInvoice>("HOAPro.DueInvoice_DuePayments", "DueInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DueInvoice>("HOAPro.DueInvoice_DuePayments", "DueInvoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOAPro", Name="DueYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DueYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DueYear object.
        /// </summary>
        /// <param name="dueYearsId">Initial value of the DueYearsId property.</param>
        /// <param name="dueYear1">Initial value of the DueYear1 property.</param>
        /// <param name="duesDueDate">Initial value of the DuesDueDate property.</param>
        /// <param name="duesAmount">Initial value of the DuesAmount property.</param>
        public static DueYear CreateDueYear(global::System.Guid dueYearsId, global::System.String dueYear1, global::System.DateTime duesDueDate, global::System.Decimal duesAmount)
        {
            DueYear dueYear = new DueYear();
            dueYear.DueYearsId = dueYearsId;
            dueYear.DueYear1 = dueYear1;
            dueYear.DuesDueDate = duesDueDate;
            dueYear.DuesAmount = duesAmount;
            return dueYear;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DueYearsId
        {
            get
            {
                return _DueYearsId;
            }
            set
            {
                if (_DueYearsId != value)
                {
                    OnDueYearsIdChanging(value);
                    ReportPropertyChanging("DueYearsId");
                    _DueYearsId = StructuralObject.SetValidValue(value, "DueYearsId");
                    ReportPropertyChanged("DueYearsId");
                    OnDueYearsIdChanged();
                }
            }
        }
        private global::System.Guid _DueYearsId;
        partial void OnDueYearsIdChanging(global::System.Guid value);
        partial void OnDueYearsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DueYear1
        {
            get
            {
                return _DueYear1;
            }
            set
            {
                OnDueYear1Changing(value);
                ReportPropertyChanging("DueYear1");
                _DueYear1 = StructuralObject.SetValidValue(value, false, "DueYear1");
                ReportPropertyChanged("DueYear1");
                OnDueYear1Changed();
            }
        }
        private global::System.String _DueYear1;
        partial void OnDueYear1Changing(global::System.String value);
        partial void OnDueYear1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DuesDueDate
        {
            get
            {
                return _DuesDueDate;
            }
            set
            {
                OnDuesDueDateChanging(value);
                ReportPropertyChanging("DuesDueDate");
                _DuesDueDate = StructuralObject.SetValidValue(value, "DuesDueDate");
                ReportPropertyChanged("DuesDueDate");
                OnDuesDueDateChanged();
            }
        }
        private global::System.DateTime _DuesDueDate;
        partial void OnDuesDueDateChanging(global::System.DateTime value);
        partial void OnDuesDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DuesAmount
        {
            get
            {
                return _DuesAmount;
            }
            set
            {
                OnDuesAmountChanging(value);
                ReportPropertyChanging("DuesAmount");
                _DuesAmount = StructuralObject.SetValidValue(value, "DuesAmount");
                ReportPropertyChanged("DuesAmount");
                OnDuesAmountChanged();
            }
        }
        private global::System.Decimal _DuesAmount;
        partial void OnDuesAmountChanging(global::System.Decimal value);
        partial void OnDuesAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOAPro", "DueInvoices_DueYears", "DueInvoice")]
        public EntityCollection<DueInvoice> DueInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DueInvoice>("HOAPro.DueInvoices_DueYears", "DueInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DueInvoice>("HOAPro.DueInvoices_DueYears", "DueInvoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HOAPro", Name="Home")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Home : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Home object.
        /// </summary>
        /// <param name="homeId">Initial value of the HomeId property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="county">Initial value of the County property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="section">Initial value of the Section property.</param>
        /// <param name="township">Initial value of the Township property.</param>
        /// <param name="townshipDir">Initial value of the TownshipDir property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="rangeDir">Initial value of the RangeDir property.</param>
        /// <param name="block">Initial value of the Block property.</param>
        /// <param name="lot">Initial value of the Lot property.</param>
        /// <param name="physicalAddress">Initial value of the PhysicalAddress property.</param>
        public static Home CreateHome(global::System.Int32 homeId, global::System.String state, global::System.String county, global::System.String city, global::System.String zip, global::System.String section, global::System.Int32 township, global::System.String townshipDir, global::System.Int32 range, global::System.String rangeDir, global::System.Int32 block, global::System.Int32 lot, global::System.String physicalAddress)
        {
            Home home = new Home();
            home.HomeId = homeId;
            home.State = state;
            home.County = county;
            home.City = city;
            home.Zip = zip;
            home.Section = section;
            home.Township = township;
            home.TownshipDir = townshipDir;
            home.Range = range;
            home.RangeDir = rangeDir;
            home.Block = block;
            home.Lot = lot;
            home.PhysicalAddress = physicalAddress;
            return home;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HomeId
        {
            get
            {
                return _HomeId;
            }
            set
            {
                if (_HomeId != value)
                {
                    OnHomeIdChanging(value);
                    ReportPropertyChanging("HomeId");
                    _HomeId = StructuralObject.SetValidValue(value, "HomeId");
                    ReportPropertyChanged("HomeId");
                    OnHomeIdChanged();
                }
            }
        }
        private global::System.Int32 _HomeId;
        partial void OnHomeIdChanging(global::System.Int32 value);
        partial void OnHomeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, false, "County");
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false, "Zip");
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Section
        {
            get
            {
                return _Section;
            }
            set
            {
                OnSectionChanging(value);
                ReportPropertyChanging("Section");
                _Section = StructuralObject.SetValidValue(value, false, "Section");
                ReportPropertyChanged("Section");
                OnSectionChanged();
            }
        }
        private global::System.String _Section;
        partial void OnSectionChanging(global::System.String value);
        partial void OnSectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Township
        {
            get
            {
                return _Township;
            }
            set
            {
                OnTownshipChanging(value);
                ReportPropertyChanging("Township");
                _Township = StructuralObject.SetValidValue(value, "Township");
                ReportPropertyChanged("Township");
                OnTownshipChanged();
            }
        }
        private global::System.Int32 _Township;
        partial void OnTownshipChanging(global::System.Int32 value);
        partial void OnTownshipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TownshipDir
        {
            get
            {
                return _TownshipDir;
            }
            set
            {
                OnTownshipDirChanging(value);
                ReportPropertyChanging("TownshipDir");
                _TownshipDir = StructuralObject.SetValidValue(value, false, "TownshipDir");
                ReportPropertyChanged("TownshipDir");
                OnTownshipDirChanged();
            }
        }
        private global::System.String _TownshipDir;
        partial void OnTownshipDirChanging(global::System.String value);
        partial void OnTownshipDirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, "Range");
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.Int32 _Range;
        partial void OnRangeChanging(global::System.Int32 value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RangeDir
        {
            get
            {
                return _RangeDir;
            }
            set
            {
                OnRangeDirChanging(value);
                ReportPropertyChanging("RangeDir");
                _RangeDir = StructuralObject.SetValidValue(value, false, "RangeDir");
                ReportPropertyChanged("RangeDir");
                OnRangeDirChanged();
            }
        }
        private global::System.String _RangeDir;
        partial void OnRangeDirChanging(global::System.String value);
        partial void OnRangeDirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Block
        {
            get
            {
                return _Block;
            }
            set
            {
                OnBlockChanging(value);
                ReportPropertyChanging("Block");
                _Block = StructuralObject.SetValidValue(value, "Block");
                ReportPropertyChanged("Block");
                OnBlockChanged();
            }
        }
        private global::System.Int32 _Block;
        partial void OnBlockChanging(global::System.Int32 value);
        partial void OnBlockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Lot
        {
            get
            {
                return _Lot;
            }
            set
            {
                OnLotChanging(value);
                ReportPropertyChanging("Lot");
                _Lot = StructuralObject.SetValidValue(value, "Lot");
                ReportPropertyChanged("Lot");
                OnLotChanged();
            }
        }
        private global::System.Int32 _Lot;
        partial void OnLotChanging(global::System.Int32 value);
        partial void OnLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalAddress
        {
            get
            {
                return _PhysicalAddress;
            }
            set
            {
                OnPhysicalAddressChanging(value);
                ReportPropertyChanging("PhysicalAddress");
                _PhysicalAddress = StructuralObject.SetValidValue(value, false, "PhysicalAddress");
                ReportPropertyChanged("PhysicalAddress");
                OnPhysicalAddressChanged();
            }
        }
        private global::System.String _PhysicalAddress;
        partial void OnPhysicalAddressChanging(global::System.String value);
        partial void OnPhysicalAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRental
        {
            get
            {
                return _IsRental;
            }
            set
            {
                OnIsRentalChanging(value);
                ReportPropertyChanging("IsRental");
                _IsRental = StructuralObject.SetValidValue(value, "IsRental");
                ReportPropertyChanged("IsRental");
                OnIsRentalChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRental;
        partial void OnIsRentalChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRentalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBuilderOwned
        {
            get
            {
                return _IsBuilderOwned;
            }
            set
            {
                OnIsBuilderOwnedChanging(value);
                ReportPropertyChanging("IsBuilderOwned");
                _IsBuilderOwned = StructuralObject.SetValidValue(value, "IsBuilderOwned");
                ReportPropertyChanged("IsBuilderOwned");
                OnIsBuilderOwnedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBuilderOwned;
        partial void OnIsBuilderOwnedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBuilderOwnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingAddress
        {
            get
            {
                return _MailingAddress;
            }
            set
            {
                OnMailingAddressChanging(value);
                ReportPropertyChanging("MailingAddress");
                _MailingAddress = StructuralObject.SetValidValue(value, true, "MailingAddress");
                ReportPropertyChanged("MailingAddress");
                OnMailingAddressChanged();
            }
        }
        private global::System.String _MailingAddress;
        partial void OnMailingAddressChanging(global::System.String value);
        partial void OnMailingAddressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HOAPro", "DueInvoices_Homes", "DueInvoice")]
        public EntityCollection<DueInvoice> DueInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DueInvoice>("HOAPro.DueInvoices_Homes", "DueInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DueInvoice>("HOAPro.DueInvoices_Homes", "DueInvoice", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
